{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/billy/Downloads/enigmas-main/src/app/components/PasswordGate.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\n\nexport default function PasswordGate() {\n  const { login } = useAuth();\n  const [firstPassword, setFirstPassword] = useState('');\n  const [secondPassword, setSecondPassword] = useState('');\n  const [firstResult, setFirstResult] = useState('');\n  const [secondResult, setSecondResult] = useState('');\n  const [showSecondChallenge, setShowSecondChallenge] = useState(false);\n  const [showHints, setShowHints] = useState({\n    'hint2-1': false,\n    'hint2-2': false,\n    'hint2-3': false,\n    'hint2-4': false,\n  });\n\n  const handleFirstSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const input = firstPassword.toUpperCase().replace(/[^A-Z]/g, '');\n    const correctAnswer = \"CREDITFLASHINDEXREPORT\";\n    \n    setFirstResult('');\n    \n    if (input === correctAnswer) {\n      setFirstResult('correct');\n      setShowSecondChallenge(true);\n      setTimeout(() => {\n        document.getElementById('textInputTwo')?.focus();\n      }, 100);\n    } else {\n      setFirstResult('incorrect');\n    }\n  };\n\n  const handleSecondSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const input = secondPassword.toUpperCase().replace(/[^A-Z]/g, '');\n    const correctAnswer = \"WELLSPOTTED\";\n    \n    setSecondResult('');\n    \n    if (input === correctAnswer) {\n      setSecondResult('correct');\n      setTimeout(() => {\n        login();\n      }, 1500);\n    } else {\n      setSecondResult('incorrect');\n    }\n  };\n\n  const toggleHint = (hintId: string) => {\n    setShowHints(prev => ({\n      ...prev,\n      [hintId]: !prev[hintId as keyof typeof prev]\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-4\" \n         style={{\n           background: 'linear-gradient(135deg, #1f2937 0%, #111827 100%)'\n         }}>\n      <div className=\"w-full max-w-2xl\">\n        {/* Main Container */}\n        <div className=\"bg-white/10 backdrop-blur-lg border border-white/20 rounded-3xl p-8 lg:p-12 text-center\">\n          <h1 className=\"text-4xl lg:text-5xl font-bold text-white mb-8 font-montserrat\">\n            Welcome to The Menagerie\n          </h1>\n          \n          {/* First Password Section */}\n          <div className=\"space-y-6 mb-8\">\n            <div className=\"bg-black/20 rounded-2xl p-6 border border-white/10\">\n              <h2 className=\"text-xl font-semibold text-white mb-4\">First Challenge</h2>\n              <p className=\"text-gray-300 text-sm mb-6 leading-relaxed\">\n                Please Enter The Four Answers To The Puzzles In The Playing Cards, In Alphabetical Order, No Spaces.\n              </p>\n              \n              <form onSubmit={handleFirstSubmit} className=\"flex flex-col sm:flex-row gap-3 mb-4\">\n                <input \n                  id=\"textInputOne\"\n                  type=\"text\"\n                  value={firstPassword}\n                  onChange={(e) => setFirstPassword(e.target.value)}\n                  placeholder=\"Enter your answer\" \n                  className=\"flex-1 px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 transition-all\"\n                  style={{\n                    boxShadow: 'focus:0 0 20px rgba(34, 197, 94, 0.3)'\n                  }}\n                  autoComplete=\"off\"\n                />\n                <button \n                  type=\"submit\"\n                  className=\"px-8 py-3 bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white font-semibold rounded-xl transition-all duration-300 transform hover:scale-105 whitespace-nowrap\">\n                  Submit\n                </button>\n              </form>\n              \n              <p className=\"text-gray-400 text-xs\">\n                For example, if the four answers were RED, YELLOW, GREEN, and PURPLE, you would enter GREENPURPLEREDYELLOW\n              </p>\n              \n              {/* First Result Messages */}\n              {firstResult === 'incorrect' && (\n                <div className=\"mt-4 p-4 bg-red-500/20 border border-red-500/30 rounded-xl\">\n                  <div className=\"flex items-center justify-center\">\n                    <span className=\"text-red-400 text-2xl mr-2\">✗</span>\n                    <span className=\"text-red-300 font-medium\">SORRY, YOUR ANSWER IS INCORRECT.</span>\n                  </div>\n                </div>\n              )}\n              \n              {firstResult === 'correct' && (\n                <div className=\"mt-4 p-4 bg-green-500/20 border border-green-500/30 rounded-xl\">\n                  <div className=\"flex items-center justify-center\">\n                    <span className=\"text-green-400 text-2xl mr-2\">✓</span>\n                    <span className=\"text-green-300 font-medium\">CORRECT! Please proceed to the second password.</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Second Password Section */}\n          {showSecondChallenge && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-black/20 rounded-2xl p-6 border border-white/10\">\n                <h2 className=\"text-xl font-semibold text-white mb-4\">Second Challenge</h2>\n                <p className=\"text-gray-300 text-sm mb-6 leading-relaxed\">\n                  The word ENIGMA is also encoded in the bookshelves (can you figure out the code?) but that is not the password you need.\n                </p>\n                \n                <form onSubmit={handleSecondSubmit} className=\"flex flex-col sm:flex-row gap-3 mb-4\">\n                  <input \n                    id=\"textInputTwo\"\n                    type=\"text\"\n                    value={secondPassword}\n                    onChange={(e) => setSecondPassword(e.target.value)}\n                    placeholder=\"Enter your answer\" \n                    className=\"flex-1 px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 transition-all\"\n                    autoComplete=\"off\"\n                  />\n                  <button \n                    type=\"submit\"\n                    className=\"px-8 py-3 bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white font-semibold rounded-xl transition-all duration-300 transform hover:scale-105 whitespace-nowrap\">\n                    Submit\n                  </button>\n                </form>\n                \n                <p className=\"text-gray-400 text-xs\">\n                  The word ENIGMA is also secretly hidden in the deck (can you find it?), but that is not the password you need.\n                </p>\n                \n                {/* Second Result Messages */}\n                {secondResult === 'incorrect' && (\n                  <div className=\"mt-4 p-4 bg-red-500/20 border border-red-500/30 rounded-xl\">\n                    <div className=\"flex items-center justify-center\">\n                      <span className=\"text-red-400 text-2xl mr-2\">✗</span>\n                      <span className=\"text-red-300 font-medium\">SORRY, YOUR ANSWER IS INCORRECT.</span>\n                    </div>\n                  </div>\n                )}\n                \n                {secondResult === 'correct' && (\n                  <div className=\"mt-4 p-4 bg-green-500/20 border border-green-500/30 rounded-xl\">\n                    <div className=\"flex items-center justify-center\">\n                      <span className=\"text-green-400 text-2xl mr-2\">✓</span>\n                      <span className=\"text-green-300 font-medium\">CORRECT! Unlocking the puzzle hunt...</span>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Hints Section */}\n                <div className=\"mt-8 space-y-3\">\n                  <h3 className=\"text-white font-semibold text-lg mb-4\">Need Help?</h3>\n                  <div className=\"space-y-2\">\n                    <button \n                      className=\"w-full text-left px-4 py-3 bg-blue-500/20 border border-blue-500/30 rounded-xl text-blue-300 hover:bg-blue-500/30 transition-all\" \n                      onClick={() => toggleHint('hint2-1')}\n                    >\n                      💡 Show Hint 1\n                    </button>\n                    {showHints['hint2-1'] && (\n                      <div className=\"p-4 bg-gray-800/50 rounded-lg border-l-4 border-blue-400\">\n                        <p className=\"text-gray-300 text-sm\">The backs of the cards are all identical. The password can be found, in code, on the back of any card.</p>\n                      </div>\n                    )}\n                    \n                    <button \n                      className=\"w-full text-left px-4 py-3 bg-blue-500/20 border border-blue-500/30 rounded-xl text-blue-300 hover:bg-blue-500/30 transition-all\" \n                      onClick={() => toggleHint('hint2-2')}\n                    >\n                      💡 Show Hint 2\n                    </button>\n                    {showHints['hint2-2'] && (\n                      <div className=\"p-4 bg-gray-800/50 rounded-lg border-l-4 border-blue-400\">\n                        <p className=\"text-gray-300 text-sm\">The password is encoded in a string of items that at first glance might look identical, but are not.</p>\n                      </div>\n                    )}\n                    \n                    <button \n                      className=\"w-full text-left px-4 py-3 bg-blue-500/20 border border-blue-500/30 rounded-xl text-blue-300 hover:bg-blue-500/30 transition-all\" \n                      onClick={() => toggleHint('hint2-3')}\n                    >\n                      💡 Show Hint 3\n                    </button>\n                    {showHints['hint2-3'] && (\n                      <div className=\"p-4 bg-gray-800/50 rounded-lg border-l-4 border-blue-400\">\n                        <p className=\"text-gray-300 text-sm\">The circles and triangles that run around the edge of the back design can be interpreted as Morse Code: one circle = DOT and two circles = DASH. Single triangles separate the dots and dashes, and double triangles separate the letters. The message runs along the top and right side, and then is repeated along the bottom and left side.</p>\n                      </div>\n                    )}\n                    \n                    <button \n                      className=\"w-full text-left px-4 py-3 bg-yellow-500/20 border border-yellow-500/30 rounded-xl text-yellow-300 hover:bg-yellow-500/30 transition-all\" \n                      onClick={() => toggleHint('hint2-4')}\n                    >\n                      🎯 Show Answer\n                    </button>\n                    {showHints['hint2-4'] && (\n                      <div className=\"p-4 bg-gray-800/50 rounded-lg border-l-4 border-yellow-400\">\n                        <p className=\"text-gray-300 text-sm font-medium\">The Password is WELLSPOTTED</p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///Users/billy/Downloads/enigmas-main/src/app/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nexport default function Header() {\n  const pathname = usePathname();\n\n  const isActive = (path: string) => pathname === path;\n\n  return (\n    <header className=\"bg-white/80 backdrop-blur-sm border-b border-gray-200 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <nav className=\"flex flex-col sm:flex-row items-center justify-between py-4 sm:py-6 gap-4 sm:gap-0\">\n          <Link href=\"/\" className=\"text-2xl font-bold text-primary-600 hover:text-primary-700 transition-colors font-montserrat\">\n            The Menagerie\n          </Link>\n          <div className=\"flex items-center space-x-8\">\n            <Link \n              href=\"/\" \n              className={`nav-underline font-medium transition-colors relative ${\n                isActive('/') \n                  ? 'text-gray-700' \n                  : 'text-gray-600 hover:text-primary-600'\n              }`}\n            >\n              Home\n            </Link>\n            <Link \n              href=\"/answer-checker\" \n              className={`nav-underline font-medium transition-colors relative ${\n                isActive('/answer-checker') \n                  ? 'text-gray-700'\n                  : 'text-gray-600 hover:text-primary-600'\n              }`}\n            >\n              Answer Checker\n            </Link>\n            <Link \n              href=\"/hall-of-fame\" \n              className={`nav-underline font-medium transition-colors relative ${\n                isActive('/hall-of-fame') \n                  ? 'text-gray-700'\n                  : 'text-gray-600 hover:text-primary-600'\n              }`}\n            >\n              Hall of Fame\n            </Link>\n            <Link \n              href=\"/hints\" \n              className={`nav-underline font-medium transition-colors relative ${\n                isActive('/hints') \n                  ? 'text-gray-700'\n                  : 'text-gray-600 hover:text-primary-600'\n              }`}\n            >\n              Hints\n            </Link>\n            <Link \n              href=\"/info\" \n              className={`nav-underline font-medium transition-colors relative ${\n                isActive('/info') \n                  ? 'text-gray-700'\n                  : 'text-gray-600 hover:text-primary-600'\n              }`}\n            >\n              Info / Errata\n            </Link>\n          </div>\n        </nav>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;;;AAJA;;;AAMe,SAAS;;IACtB,MAAM,WAAW,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,WAAW,CAAC,OAAiB,aAAa;IAEhD,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCACb,6LAAC,+JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;kCAA+F;;;;;;kCAGxH,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAC,qDAAqD,EAC/D,SAAS,OACL,kBACA,wCACJ;0CACH;;;;;;0CAGD,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAC,qDAAqD,EAC/D,SAAS,qBACL,kBACA,wCACJ;0CACH;;;;;;0CAGD,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAC,qDAAqD,EAC/D,SAAS,mBACL,kBACA,wCACJ;0CACH;;;;;;0CAGD,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAC,qDAAqD,EAC/D,SAAS,YACL,kBACA,wCACJ;0CACH;;;;;;0CAGD,6LAAC,+JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAC,qDAAqD,EAC/D,SAAS,WACL,kBACA,wCACJ;0CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb;GApEwB;;QACL,qIAAA,CAAA,cAAW;;;KADN","debugId":null}},
    {"offset": {"line": 635, "column": 0}, "map": {"version":3,"sources":["file:///Users/billy/Downloads/enigmas-main/src/app/components/AnswerChecker.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport Image from 'next/image';\n\ninterface AnswerCheckerProps {\n  className?: string;\n  onCorrectAnswer: (cardName: string, solved: boolean) => void;\n}\n\nexport default function AnswerChecker({ className = '', onCorrectAnswer }: AnswerCheckerProps) {\n  const [answer, setAnswer] = useState('');\n  const [result, setResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [solvedPuzzles, setSolvedPuzzles] = useState<Set<number>>(new Set());\n  const [currentPiece, setCurrentPiece] = useState<number | null>(null);\n  const [showFinalImage, setShowFinalImage] = useState(false);\n\n  useEffect(() => {\n    // Load solved puzzles from localStorage\n    const solved = localStorage.getItem('menagerieSolvedPuzzles');\n    if (solved) {\n      setSolvedPuzzles(new Set(JSON.parse(solved)));\n    }\n  }, []);\n\n  const saveProgress = (puzzleNumber: number) => {\n    const newSolved = new Set([...solvedPuzzles, puzzleNumber]);\n    setSolvedPuzzles(newSolved);\n    setCurrentPiece(puzzleNumber);\n    localStorage.setItem('menagerieSolvedPuzzles', JSON.stringify([...newSolved]));\n  };\n\n  const correctAnswers: { [key: string]: number } = {\n    'the dean martin show': 1,\n    'denial of service': 2,\n    'flatbed trailer': 3,\n    'midterm break': 4,\n    'life insurance': 5,\n    'meteor orbits': 6,\n    'cosmopolitans': 7,\n    'powerpoint': 8,\n  };\n\n  const finalAnswer = 'beast friends forever';\n\n  const checkAnswer = () => {\n    setIsLoading(true);\n    const cleanAnswer = answer.toLowerCase().trim();\n\n    setTimeout(() => {\n      if (correctAnswers[cleanAnswer]) {\n        const puzzleNumber = correctAnswers[cleanAnswer];\n        setResult(''); // Clear any previous messages\n        saveProgress(puzzleNumber);\n        setAnswer('');\n        onCorrectAnswer(`puzzle-${puzzleNumber}`, true);\n      } else if (cleanAnswer === finalAnswer) {\n        setResult('');\n        setShowFinalImage(true);\n        setCurrentPiece(null);\n        setAnswer('');\n      } else if (cleanAnswer === '') {\n        setResult('Please enter an answer!');\n      } else {\n        setResult('❌ Incorrect. Keep trying!');\n        setCurrentPiece(null);\n      }\n      setIsLoading(false);\n    }, 500);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    checkAnswer();\n  };\n\n  return (\n    <div className={`bg-white/70 backdrop-blur-sm border border-emerald-200 rounded-xl p-6 shadow-lg w-[620px] ${className}`}>\n      <div className=\"text-center mb-6\">\n        <h3 className=\"text-xl font-bold text-emerald-800 mb-2 font-montserrat\">🔍 Answer Checker</h3>\n        <p className=\"text-emerald-600\">Enter your puzzle answers here</p>\n      </div>\n\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <div>\n          <input\n            type=\"text\"\n            value={answer}\n            onChange={(e) => setAnswer(e.target.value)}\n            placeholder=\"Enter your answer...\"\n            className=\"w-full px-4 py-3 border border-emerald-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 transition-all\"\n            disabled={isLoading}\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          disabled={isLoading}\n          className=\"w-full bg-gradient-to-r from-emerald-600 to-emerald-700 text-white py-3 px-4 rounded-lg font-medium hover:from-emerald-700 hover:to-emerald-800 transition-all duration-200 transform hover:scale-[1.02] disabled:opacity-50 disabled:transform-none\"\n        >\n          {isLoading ? 'Checking...' : 'Check Answer'}\n        </button>\n      </form>\n\n      {result && (\n        <div className={`mt-4 p-4 rounded-lg text-center font-medium ${\n          result.includes('✅') \n            ? 'bg-green-100 text-green-800 border border-green-200' \n            : 'bg-red-100 text-red-800 border border-red-200'\n        }`}>\n          {result}\n        </div>\n      )}\n\n      {/* Show current solved puzzle piece */}\n      {currentPiece && (\n        <div className=\"mt-6 flex justify-center\">\n          <Image\n            src={`/images/${currentPiece}.png`}\n            alt={`Puzzle piece ${currentPiece}`}\n            width={400}\n            height={400}\n            className=\"w-auto h-auto max-w-full\"\n          />\n        </div>\n      )}\n\n      {/* Show final image when complete */}\n      {showFinalImage && (\n        <div className=\"mt-6 p-6 bg-gradient-to-r from-yellow-50 to-amber-50 border border-yellow-300 rounded-lg\">\n          <h3 className=\"text-2xl font-bold text-amber-800 mb-4 text-center\">The Menagerie</h3>\n          <div className=\"rounded-lg overflow-hidden shadow-lg\">\n            <Image\n              src=\"/images/menagerie.jpg\"\n              alt=\"The Menagerie\"\n              width={600}\n              height={400}\n              className=\"w-full h-auto\"\n            />\n          </div>\n          <p className=\"mt-4 text-center text-amber-700 font-medium\">\n            Well done! You've completed The Menagerie Puzzle Hunt!\n          </p>\n          <p className=\"mt-2 text-center text-amber-600 text-sm\">\n            Please email your name to info@davidkwongmagic.com and dshukan@gmail.com \n            with your final answer to be added to our Hall of Fame.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 876, "column": 0}, "map": {"version":3,"sources":["file:///Users/billy/Downloads/enigmas-main/src/app/page.tsx"],"sourcesContent":["'use client';\n\nimport { useAuth } from './context/AuthContext';\nimport PasswordGate from './components/PasswordGate';\nimport Header from './components/Header';\nimport AnswerChecker from './components/AnswerChecker';\nimport Image from 'next/image';\nimport { useState, useEffect } from 'react';\n\ninterface Progress {\n  [key: string]: boolean;\n}\n\nexport default function Home() {\n  const { isAuthenticated } = useAuth();\n  const [progress, setProgress] = useState<Progress>({});\n\n  useEffect(() => {\n    const savedProgress = localStorage.getItem('menagerieSolvedPuzzles');\n    if (savedProgress) {\n      const puzzleNumbers = JSON.parse(savedProgress);\n      const newProgress: Progress = {};\n      puzzleNumbers.forEach((num: number) => {\n        newProgress[`puzzle-${num}`] = true;\n      });\n      setProgress(newProgress);\n    }\n  }, []);\n\n  const updateProgress = (cardName: string, solved: boolean) => {\n    const newProgress = { ...progress, [cardName]: solved };\n    setProgress(newProgress);\n  };\n\n  if (!isAuthenticated) {\n    return <PasswordGate />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100\">\n      <Header />\n      \n      <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 lg:py-12\">\n        <div className=\"flex flex-col lg:flex-row gap-8 lg:gap-12\">\n          {/* Left Column - Main Content */}\n          <div className=\"lg:w-1/2 space-y-8\">\n            {/* Welcome Card */}\n            <div className=\"bg-white rounded-2xl shadow-lg p-8 lg:p-10 transform hover:scale-[1.01] transition-transform duration-300\">\n              <h1 className=\"text-4xl lg:text-5xl font-bold text-emerald-600 mb-6 font-montserrat\">\n                Welcome to the Menagerie Puzzle Hunt\n              </h1>\n              <div className=\"prose prose-lg max-w-none text-gray-700 leading-relaxed space-y-4\">\n                <p>\n                  Welcome, hunters, to the Menagerie Puzzle Hunt, a special eight-puzzle hunt featuring unique challenges across different themed environments.\n                </p>\n                \n                <p>\n                  Each puzzle in this collection (numbered 1 through 8) features a unique challenge to solve, and each puzzle has a one-word answer. \n                  Your goal: find all eight answers.\n                </p>\n                \n                <p>\n                  But don't think that's where the challenge ends. If you're able to solve all eight puzzles, you'll want to put all eight answers together \n                  (alphabetically, with no spaces between them) to form a super-long \"password\" that will unlock access to an additional meta-challenge. \n                  And if you can solve that challenge as well, you'll earn the right to your name being displayed on our Hall of Fame. Good luck!\n                </p>\n                \n                <p>\n                  The puzzles are themed around different environments: Broadcasting Studio, Computer Lab, Fulfillment Center, Map Room, Noah's Ark, Observatory, Restaurant, and Terrarium. Each presents its own unique challenge and style of puzzle solving.\n                </p>\n              </div>\n            </div>\n\n\n          </div>\n\n          {/* Right Column - Sidebar */}\n          <div className=\"lg:w-1/2 space-y-8\">\n            {/* Answer Checker */}\n            <AnswerChecker onCorrectAnswer={updateProgress} />\n\n\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AAEA;;;AAPA;;;;;;AAae,SAAS;;IACtB,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,wIAAA,CAAA,UAAO,AAAD;IAClC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,CAAC;IAEpD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,MAAM,gBAAgB,aAAa,OAAO,CAAC;YAC3C,IAAI,eAAe;gBACjB,MAAM,gBAAgB,KAAK,KAAK,CAAC;gBACjC,MAAM,cAAwB,CAAC;gBAC/B,cAAc,OAAO;sCAAC,CAAC;wBACrB,WAAW,CAAC,CAAC,OAAO,EAAE,KAAK,CAAC,GAAG;oBACjC;;gBACA,YAAY;YACd;QACF;yBAAG,EAAE;IAEL,MAAM,iBAAiB,CAAC,UAAkB;QACxC,MAAM,cAAc;YAAE,GAAG,QAAQ;YAAE,CAAC,SAAS,EAAE;QAAO;QACtD,YAAY;IACd;IAEA,IAAI,CAAC,iBAAiB;QACpB,qBAAO,6LAAC,4IAAA,CAAA,UAAY;;;;;IACtB;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC,sIAAA,CAAA,UAAM;;;;;0BAEP,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC;oBAAI,WAAU;;sCAEb,6LAAC;4BAAI,WAAU;sCAEb,cAAA,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAG,WAAU;kDAAuE;;;;;;kDAGrF,6LAAC;wCAAI,WAAU;;0DACb,6LAAC;0DAAE;;;;;;0DAIH,6LAAC;0DAAE;;;;;;0DAKH,6LAAC;0DAAE;;;;;;0DAMH,6LAAC;0DAAE;;;;;;;;;;;;;;;;;;;;;;;sCAUT,6LAAC;4BAAI,WAAU;sCAEb,cAAA,6LAAC,6IAAA,CAAA,UAAa;gCAAC,iBAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQ5C;GA1EwB;;QACM,wIAAA,CAAA,UAAO;;;KADb","debugId":null}}]
}
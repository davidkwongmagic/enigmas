{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/billy/Downloads/enigmas-main/src/app/components/PasswordGate.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\nimport { useAuth } from '../context/AuthContext';\n\nexport default function PasswordGate() {\n  const { login } = useAuth();\n  const [firstPassword, setFirstPassword] = useState('');\n  const [secondPassword, setSecondPassword] = useState('');\n  const [firstResult, setFirstResult] = useState('');\n  const [secondResult, setSecondResult] = useState('');\n  const [showSecondChallenge, setShowSecondChallenge] = useState(false);\n  const [showHints, setShowHints] = useState({\n    'hint2-1': false,\n    'hint2-2': false,\n    'hint2-3': false,\n    'hint2-4': false,\n  });\n\n  const handleFirstSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const input = firstPassword.toUpperCase().replace(/[^A-Z]/g, '');\n    const correctAnswer = \"CREDITFLASHINDEXREPORT\";\n    \n    setFirstResult('');\n    \n    if (input === correctAnswer) {\n      setFirstResult('correct');\n      setShowSecondChallenge(true);\n      setTimeout(() => {\n        document.getElementById('textInputTwo')?.focus();\n      }, 100);\n    } else {\n      setFirstResult('incorrect');\n    }\n  };\n\n  const handleSecondSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    const input = secondPassword.toUpperCase().replace(/[^A-Z]/g, '');\n    const correctAnswer = \"WELLSPOTTED\";\n    \n    setSecondResult('');\n    \n    if (input === correctAnswer) {\n      setSecondResult('correct');\n      setTimeout(() => {\n        login();\n      }, 1500);\n    } else {\n      setSecondResult('incorrect');\n    }\n  };\n\n  const toggleHint = (hintId: string) => {\n    setShowHints(prev => ({\n      ...prev,\n      [hintId]: !prev[hintId as keyof typeof prev]\n    }));\n  };\n\n  return (\n    <div className=\"min-h-screen flex items-center justify-center p-4\" \n         style={{\n           background: 'linear-gradient(135deg, #1f2937 0%, #111827 100%)'\n         }}>\n      <div className=\"w-full max-w-2xl\">\n        {/* Main Container */}\n        <div className=\"bg-white/10 backdrop-blur-lg border border-white/20 rounded-3xl p-8 lg:p-12 text-center\">\n          <h1 className=\"text-4xl lg:text-5xl font-bold text-white mb-8 font-montserrat\">\n            Welcome to The Menagerie\n          </h1>\n          \n          {/* First Password Section */}\n          <div className=\"space-y-6 mb-8\">\n            <div className=\"bg-black/20 rounded-2xl p-6 border border-white/10\">\n              <h2 className=\"text-xl font-semibold text-white mb-4\">First Challenge</h2>\n              <p className=\"text-gray-300 text-sm mb-6 leading-relaxed\">\n                Please Enter The Four Answers To The Puzzles In The Playing Cards, In Alphabetical Order, No Spaces.\n              </p>\n              \n              <form onSubmit={handleFirstSubmit} className=\"flex flex-col sm:flex-row gap-3 mb-4\">\n                <input \n                  id=\"textInputOne\"\n                  type=\"text\"\n                  value={firstPassword}\n                  onChange={(e) => setFirstPassword(e.target.value)}\n                  placeholder=\"Enter your answer\" \n                  className=\"flex-1 px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 transition-all\"\n                  style={{\n                    boxShadow: 'focus:0 0 20px rgba(34, 197, 94, 0.3)'\n                  }}\n                  autoComplete=\"off\"\n                />\n                <button \n                  type=\"submit\"\n                  className=\"px-8 py-3 bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white font-semibold rounded-xl transition-all duration-300 transform hover:scale-105 whitespace-nowrap\">\n                  Submit\n                </button>\n              </form>\n              \n              <p className=\"text-gray-400 text-xs\">\n                For example, if the four answers were RED, YELLOW, GREEN, and PURPLE, you would enter GREENPURPLEREDYELLOW\n              </p>\n              \n              {/* First Result Messages */}\n              {firstResult === 'incorrect' && (\n                <div className=\"mt-4 p-4 bg-red-500/20 border border-red-500/30 rounded-xl\">\n                  <div className=\"flex items-center justify-center\">\n                    <span className=\"text-red-400 text-2xl mr-2\">✗</span>\n                    <span className=\"text-red-300 font-medium\">SORRY, YOUR ANSWER IS INCORRECT.</span>\n                  </div>\n                </div>\n              )}\n              \n              {firstResult === 'correct' && (\n                <div className=\"mt-4 p-4 bg-green-500/20 border border-green-500/30 rounded-xl\">\n                  <div className=\"flex items-center justify-center\">\n                    <span className=\"text-green-400 text-2xl mr-2\">✓</span>\n                    <span className=\"text-green-300 font-medium\">CORRECT! Please proceed to the second password.</span>\n                  </div>\n                </div>\n              )}\n            </div>\n          </div>\n\n          {/* Second Password Section */}\n          {showSecondChallenge && (\n            <div className=\"space-y-6\">\n              <div className=\"bg-black/20 rounded-2xl p-6 border border-white/10\">\n                <h2 className=\"text-xl font-semibold text-white mb-4\">Second Challenge</h2>\n                <p className=\"text-gray-300 text-sm mb-6 leading-relaxed\">\n                  The word ENIGMA is also encoded in the bookshelves (can you figure out the code?) but that is not the password you need.\n                </p>\n                \n                <form onSubmit={handleSecondSubmit} className=\"flex flex-col sm:flex-row gap-3 mb-4\">\n                  <input \n                    id=\"textInputTwo\"\n                    type=\"text\"\n                    value={secondPassword}\n                    onChange={(e) => setSecondPassword(e.target.value)}\n                    placeholder=\"Enter your answer\" \n                    className=\"flex-1 px-4 py-3 bg-white/10 border border-white/20 rounded-xl text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 transition-all\"\n                    autoComplete=\"off\"\n                  />\n                  <button \n                    type=\"submit\"\n                    className=\"px-8 py-3 bg-gradient-to-r from-emerald-500 to-emerald-600 hover:from-emerald-600 hover:to-emerald-700 text-white font-semibold rounded-xl transition-all duration-300 transform hover:scale-105 whitespace-nowrap\">\n                    Submit\n                  </button>\n                </form>\n                \n                <p className=\"text-gray-400 text-xs\">\n                  The word ENIGMA is also secretly hidden in the deck (can you find it?), but that is not the password you need.\n                </p>\n                \n                {/* Second Result Messages */}\n                {secondResult === 'incorrect' && (\n                  <div className=\"mt-4 p-4 bg-red-500/20 border border-red-500/30 rounded-xl\">\n                    <div className=\"flex items-center justify-center\">\n                      <span className=\"text-red-400 text-2xl mr-2\">✗</span>\n                      <span className=\"text-red-300 font-medium\">SORRY, YOUR ANSWER IS INCORRECT.</span>\n                    </div>\n                  </div>\n                )}\n                \n                {secondResult === 'correct' && (\n                  <div className=\"mt-4 p-4 bg-green-500/20 border border-green-500/30 rounded-xl\">\n                    <div className=\"flex items-center justify-center\">\n                      <span className=\"text-green-400 text-2xl mr-2\">✓</span>\n                      <span className=\"text-green-300 font-medium\">CORRECT! Unlocking the puzzle hunt...</span>\n                    </div>\n                  </div>\n                )}\n                \n                {/* Hints Section */}\n                <div className=\"mt-8 space-y-3\">\n                  <h3 className=\"text-white font-semibold text-lg mb-4\">Need Help?</h3>\n                  <div className=\"space-y-2\">\n                    <button \n                      className=\"w-full text-left px-4 py-3 bg-blue-500/20 border border-blue-500/30 rounded-xl text-blue-300 hover:bg-blue-500/30 transition-all\" \n                      onClick={() => toggleHint('hint2-1')}\n                    >\n                      💡 Show Hint 1\n                    </button>\n                    {showHints['hint2-1'] && (\n                      <div className=\"p-4 bg-gray-800/50 rounded-lg border-l-4 border-blue-400\">\n                        <p className=\"text-gray-300 text-sm\">The backs of the cards are all identical. The password can be found, in code, on the back of any card.</p>\n                      </div>\n                    )}\n                    \n                    <button \n                      className=\"w-full text-left px-4 py-3 bg-blue-500/20 border border-blue-500/30 rounded-xl text-blue-300 hover:bg-blue-500/30 transition-all\" \n                      onClick={() => toggleHint('hint2-2')}\n                    >\n                      💡 Show Hint 2\n                    </button>\n                    {showHints['hint2-2'] && (\n                      <div className=\"p-4 bg-gray-800/50 rounded-lg border-l-4 border-blue-400\">\n                        <p className=\"text-gray-300 text-sm\">The password is encoded in a string of items that at first glance might look identical, but are not.</p>\n                      </div>\n                    )}\n                    \n                    <button \n                      className=\"w-full text-left px-4 py-3 bg-blue-500/20 border border-blue-500/30 rounded-xl text-blue-300 hover:bg-blue-500/30 transition-all\" \n                      onClick={() => toggleHint('hint2-3')}\n                    >\n                      💡 Show Hint 3\n                    </button>\n                    {showHints['hint2-3'] && (\n                      <div className=\"p-4 bg-gray-800/50 rounded-lg border-l-4 border-blue-400\">\n                        <p className=\"text-gray-300 text-sm\">The circles and triangles that run around the edge of the back design can be interpreted as Morse Code: one circle = DOT and two circles = DASH. Single triangles separate the dots and dashes, and double triangles separate the letters. The message runs along the top and right side, and then is repeated along the bottom and left side.</p>\n                      </div>\n                    )}\n                    \n                    <button \n                      className=\"w-full text-left px-4 py-3 bg-yellow-500/20 border border-yellow-500/30 rounded-xl text-yellow-300 hover:bg-yellow-500/30 transition-all\" \n                      onClick={() => toggleHint('hint2-4')}\n                    >\n                      🎯 Show Answer\n                    </button>\n                    {showHints['hint2-4'] && (\n                      <div className=\"p-4 bg-gray-800/50 rounded-lg border-l-4 border-yellow-400\">\n                        <p className=\"text-gray-300 text-sm font-medium\">The Password is WELLSPOTTED</p>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 527, "column": 0}, "map": {"version":3,"sources":["file:///Users/billy/Downloads/enigmas-main/src/app/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nexport default function Header() {\n  const pathname = usePathname();\n\n  const isActive = (path: string) => pathname === path;\n\n  return (\n    <header className=\"bg-white/80 backdrop-blur-sm border-b border-gray-200 sticky top-0 z-50\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        <nav className=\"flex flex-col sm:flex-row items-center justify-between py-4 sm:py-6 gap-4 sm:gap-0\">\n          <Link href=\"/\" className=\"text-2xl font-bold text-primary-600 hover:text-primary-700 transition-colors font-montserrat\">\n            The Menagerie\n          </Link>\n          <div className=\"flex items-center space-x-8\">\n            <Link \n              href=\"/\" \n              className={`nav-underline font-medium transition-colors relative ${\n                isActive('/') \n                  ? 'text-gray-700' \n                  : 'text-gray-600 hover:text-primary-600'\n              }`}\n            >\n              Home\n            </Link>\n            <Link \n              href=\"/answer-checker\" \n              className={`nav-underline font-medium transition-colors relative ${\n                isActive('/answer-checker') \n                  ? 'text-gray-700'\n                  : 'text-gray-600 hover:text-primary-600'\n              }`}\n            >\n              Answer Checker\n            </Link>\n            <Link \n              href=\"/hall-of-fame\" \n              className={`nav-underline font-medium transition-colors relative ${\n                isActive('/hall-of-fame') \n                  ? 'text-gray-700'\n                  : 'text-gray-600 hover:text-primary-600'\n              }`}\n            >\n              Hall of Fame\n            </Link>\n            <Link \n              href=\"/hints\" \n              className={`nav-underline font-medium transition-colors relative ${\n                isActive('/hints') \n                  ? 'text-gray-700'\n                  : 'text-gray-600 hover:text-primary-600'\n              }`}\n            >\n              Hints\n            </Link>\n            <Link \n              href=\"/info\" \n              className={`nav-underline font-medium transition-colors relative ${\n                isActive('/info') \n                  ? 'text-gray-700'\n                  : 'text-gray-600 hover:text-primary-600'\n              }`}\n            >\n              Info / Errata\n            </Link>\n          </div>\n        </nav>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAJA;;;;AAMe,SAAS;IACtB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAE3B,MAAM,WAAW,CAAC,OAAiB,aAAa;IAEhD,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;kCAA+F;;;;;;kCAGxH,8OAAC;wBAAI,WAAU;;0CACb,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAC,qDAAqD,EAC/D,SAAS,OACL,kBACA,wCACJ;0CACH;;;;;;0CAGD,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAC,qDAAqD,EAC/D,SAAS,qBACL,kBACA,wCACJ;0CACH;;;;;;0CAGD,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAC,qDAAqD,EAC/D,SAAS,mBACL,kBACA,wCACJ;0CACH;;;;;;0CAGD,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAC,qDAAqD,EAC/D,SAAS,YACL,kBACA,wCACJ;0CACH;;;;;;0CAGD,8OAAC,4JAAA,CAAA,UAAI;gCACH,MAAK;gCACL,WAAW,CAAC,qDAAqD,EAC/D,SAAS,WACL,kBACA,wCACJ;0CACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQb","debugId":null}},
    {"offset": {"line": 633, "column": 0}, "map": {"version":3,"sources":["file:///Users/billy/Downloads/enigmas-main/src/app/info/page.tsx"],"sourcesContent":["'use client';\n\nimport { useAuth } from '../context/AuthContext';\nimport PasswordGate from '../components/PasswordGate';\nimport Header from '../components/Header';\n\nexport default function InfoPage() {\n  const { isAuthenticated } = useAuth();\n\n  if (!isAuthenticated) {\n    return <PasswordGate />;\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100\">\n      <Header />\n      \n      <main className=\"max-w-4xl mx-auto px-4 sm:px-6 lg:px-8 py-8 lg:py-12\">\n        <div className=\"bg-white rounded-2xl shadow-lg p-8 lg:p-12 transform hover:scale-[1.01] transition-transform duration-300\">\n          <h1 className=\"text-4xl lg:text-5xl font-bold text-emerald-600 mb-8 font-montserrat text-center\">Info & Errata</h1>\n          \n          {/* Credits Section */}\n          <div className=\"prose prose-lg max-w-none text-gray-700 leading-relaxed space-y-6 mb-12\">\n            <p className=\"text-lg\">\n              Heartfelt thanks go to everyone who helped make this hunt a reality and (I hope!) a fun challenge to everyone who attempts it. This includes, though is not limited to: David Kwong, who conceived the idea and trusted me to write a whole hunt for it (and then playtested it); Chris Chelko, our knowledgeable producing partner on the entire project; Billy French, whose artwork and web design helped the Hunt pop off the page; Patrick Roche, for his additional tireless assistance with the website; and our testsolvers: David Arnott, Stephanie Kelleher Bennett, Mark Halpin, Elissa Grossman, Emily Jillette, Craig Mazin, Melissa Mazin, and Sandor Weisz, all of whom provided essential commentary, insight, and reality checks to make the hunt much better than it was before things were put in their hands.\n            </p>\n            <div className=\"text-right\">\n              <p className=\"italic text-gray-600 font-medium\">-Dave Shukan</p>\n            </div>\n          </div>\n\n          {/* Decorative Separator */}\n          <div className=\"flex items-center justify-center my-12\">\n            <div className=\"flex space-x-4 text-3xl text-gray-400\">\n              <span>⭐</span>\n              <span>⭐</span>\n              <span>⭐</span>\n            </div>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n} "],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,EAAE,eAAe,EAAE,GAAG,CAAA,GAAA,qIAAA,CAAA,UAAO,AAAD;IAElC,IAAI,CAAC,iBAAiB;QACpB,qBAAO,8OAAC,yIAAA,CAAA,UAAY;;;;;IACtB;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,mIAAA,CAAA,UAAM;;;;;0BAEP,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAG,WAAU;sCAAmF;;;;;;sCAGjG,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAE,WAAU;8CAAU;;;;;;8CAGvB,8OAAC;oCAAI,WAAU;8CACb,cAAA,8OAAC;wCAAE,WAAU;kDAAmC;;;;;;;;;;;;;;;;;sCAKpD,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;kDACb,8OAAC;kDAAK;;;;;;kDACN,8OAAC;kDAAK;;;;;;kDACN,8OAAC;kDAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOpB","debugId":null}}]
}